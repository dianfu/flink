/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package org.apache.flink.fn_execution.v1;

option java_package = "org.apache.flink.fnexecution.v1";
option java_outer_classname = "FlinkFnApi";

message UserDefinedFunction {
    message Input {
        oneof input {
            UserDefinedFunction udf = 1;
            int32 inputOffset = 2;
        }
    }

    bytes payload = 1;
    repeated Input inputs = 2;
}

message UserDefinedFunctions {
    repeated UserDefinedFunction udfs = 1;
}

message Schema {
    enum TypeName {
        TINYINT = 0;
        SMALLINT = 1;
        INT = 2;
        BIGINT = 3;
        DECIMAL = 4;
        FLOAT = 5;
        DOUBLE = 6;
        DATE = 7;
        TIME = 8;
        DATETIME = 9;
        BOOLEAN = 10;
        BINARY = 11;
        VARBINARY = 12;
        CHAR = 13;
        VARCHAR = 14;
        ARRAY = 15;
        MAP = 16;
        MULTISET = 17;
        ROW = 18;
    }

    message MapType {
        FieldType key_type = 1;
        FieldType value_type = 2;
    }

    message FieldType {
        TypeName type_name = 1;
        bool nullable = 2;
        oneof type_info {
            FieldType collection_element_type = 3;
            MapType map_type = 4;
            Schema row_schema = 5;
        }
    }

    message Field {
        string name = 1;
        string description = 2;
        FieldType type = 3;
    }

    repeated Field fields = 1;
}
